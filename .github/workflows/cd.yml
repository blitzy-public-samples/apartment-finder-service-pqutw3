name: Continuous Deployment

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate with Google Cloud
      run: |
        gcloud auth configure-docker

    - name: Build and push Docker images
      run: |
        docker build -t gcr.io/$PROJECT_ID/frontend:${{ github.sha }} ./frontend
        docker build -t gcr.io/$PROJECT_ID/backend:${{ github.sha }} ./backend
        docker push gcr.io/$PROJECT_ID/frontend:${{ github.sha }}
        docker push gcr.io/$PROJECT_ID/backend:${{ github.sha }}

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/frontend frontend=gcr.io/$PROJECT_ID/frontend:${{ github.sha }}
        kubectl set image deployment/backend backend=gcr.io/$PROJECT_ID/backend:${{ github.sha }}

    - name: Update database schema
      run: |
        # HUMAN ASSISTANCE NEEDED
        # Add commands to update database schema if necessary
        # Example: kubectl exec -it $(kubectl get pod -l app=backend -o jsonpath="{.items[0].metadata.name}") -- npm run migrate

    - name: Run post-deployment health checks
      run: |
        # HUMAN ASSISTANCE NEEDED
        # Add commands to run health checks
        # Example: 
        # kubectl rollout status deployment/frontend
        # kubectl rollout status deployment/backend
        # Add additional health check commands as needed